import{_ as l,r as i,o as t,c,d as e,e as a,a as n,b as r}from"./app-B6NiJo-f.js";const o={},p=r('<h2 id="系统环境" tabindex="-1"><a class="header-anchor" href="#系统环境"><span>系统环境</span></a></h2><blockquote><p>OSX: 11.4</p><p>Docker Engine : v20.10.6</p><p>Docker Compose: 1.29.1</p><p>Kubernetes: v1.19.7</p><p>Node: v12.22.1</p><p>Go: 1.16.5</p></blockquote><h2 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h2><ul><li>Docker 虚拟化容器</li><li>Kubernetes（k8s） 集群(本地可选择采用minikube)</li><li>Kubectl 命令行工具 (用于与集群通信)</li></ul><h3 id="minikube-baas本地开发环境" tabindex="-1"><a class="header-anchor" href="#minikube-baas本地开发环境"><span>Minikube（baas本地开发环境）</span></a></h3>',5),d={href:"https://minikube.sigs.k8s.io/docs/start/",target:"_blank",rel:"noopener noreferrer"},u=r(`<blockquote><p>MacOS可跳过安装minikube，在Docker设置中直接启用Kubernetes即可</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">// 启动本地集群</span>
<span class="line">minikube start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>打开 Kubernetes 仪表板</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">minikube dashboard <span class="token parameter variable">--url</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),b={id:"运行fabric-samples",tabindex:"-1"},m={class:"header-anchor",href:"#运行fabric-samples"},h={href:"https://github.com/hyperledger/fabric-samples",target:"_blank",rel:"noopener noreferrer"},v={href:"https://hyperledger-fabric.readthedocs.io/en/latest/install.html",target:"_blank",rel:"noopener noreferrer"},k=r(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">// 启动测试网络并创建channel和ca</span>
<span class="line">./network.sh up createChannel <span class="token parameter variable">-c</span> mychannel <span class="token parameter variable">-ca</span></span>
<span class="line"></span>
<span class="line">./network.sh down</span>
<span class="line"></span>
<span class="line">./network.sh deployCC <span class="token parameter variable">-ccn</span> basic <span class="token parameter variable">-ccp</span> <span class="token punctuation">..</span>/asset-transfer-basic/chaincode-go <span class="token parameter variable">-ccl</span> go</span>
<span class="line"></span>
<span class="line">./network.sh deployCC <span class="token parameter variable">-ccn</span> basic <span class="token parameter variable">-ccp</span> <span class="token punctuation">..</span>/asset-transfer-basic/chaincode-java/ <span class="token parameter variable">-ccl</span> <span class="token function">java</span></span>
<span class="line"></span>
<span class="line">./network.sh deployCC <span class="token parameter variable">-ccn</span> basic <span class="token parameter variable">-ccp</span> <span class="token punctuation">..</span>/asset-transfer-basic/chaincode-typescript <span class="token parameter variable">-ccl</span> typescript</span>
<span class="line"></span>
<span class="line">./network.sh deployCC <span class="token parameter variable">-ccn</span> basic <span class="token parameter variable">-ccp</span> <span class="token punctuation">..</span>/asset-transfer-basic/chaincode-javascript <span class="token parameter variable">-ccl</span> javascript</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="采坑经历" tabindex="-1"><a class="header-anchor" href="#采坑经历"><span>采坑经历</span></a></h2><h3 id="安装链码" tabindex="-1"><a class="header-anchor" href="#安装链码"><span>安装链码</span></a></h3><p>安装链码步骤Error，报错信息如下：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">Error: chaincode <span class="token function">install</span> failed with status: <span class="token number">500</span> - failed to invoke backing implementation of <span class="token string">&#39;InstallChaincode&#39;</span><span class="token builtin class-name">:</span> could not build chaincode: <span class="token function">docker</span> build failed: <span class="token function">docker</span> image build failed: <span class="token function">docker</span> build failed: Failed to pull hyperledger/fabric-nodeenv:2.3: API error <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>: Get https://registry-1.docker.io/v2/: net/http: request canceled <span class="token keyword">while</span> waiting <span class="token keyword">for</span> connection <span class="token punctuation">(</span>Client.Timeout exceeded <span class="token keyword">while</span> awaiting headers<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>根据报错信息发现hyperledger/fabric-nodeenv:2.3这个镜像拉取失败</p>`,6),g={href:"https://stackoverflow.com/questions/48056365/error-get-https-registry-1-docker-io-v2-net-http-request-canceled-while-b",target:"_blank",rel:"noopener noreferrer"},f=r(`<ol><li>尝试更改/etc/resolv.conf配置文件中nameserver为Google DNS并重启docker，重新拉取镜像无效。</li><li>在OSX环境，将Docker配置中Preferences -&gt; Experimental Features-&gt;Experimental Virtualization Framework改为disable，重启Docker后，脚本运行成功。</li></ol><h3 id="api-service-error" tabindex="-1"><a class="header-anchor" href="#api-service-error"><span>API Service Error</span></a></h3><p>本地环境Service错误，报错日志如下:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token number">2021</span>-06-30T07:24:04.530Z - error: <span class="token punctuation">[</span>ServiceEndpoint<span class="token punctuation">]</span>: Error: Failed to connect before the deadline on Committer- name: orderer.example.com:7050, url:grpcs://orderer.example.com:7050, connected:false, connectAttempted:true</span>
<span class="line"><span class="token number">2021</span>-06-30T07:24:04.530Z - error: <span class="token punctuation">[</span>ServiceEndpoint<span class="token punctuation">]</span>: waitForReady - Failed to connect to remote gRPC server orderer.example.com:7050 url:grpcs://orderer.example.com:7050 timeout:3000</span>
<span class="line"><span class="token number">2021</span>-06-30T07:24:04.530Z - error: <span class="token punctuation">[</span>DiscoveryService<span class="token punctuation">]</span>: _buildOrderer<span class="token punctuation">[</span>mychannel<span class="token punctuation">]</span> - Unable to connect to the discovered orderer orderer.example.com:7050 due to Error: Failed to connect before the deadline on Committer- name: orderer.example.com:7050, url:grpcs://orderer.example.com:7050, connected:false, connectAttempted:true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方案：添加相关域名至本地hosts，并重启docker容器。</p>`,5);function _(x,w){const s=i("ExternalLinkIcon");return t(),c("div",null,[p,e("p",null,[a("本地安装minikube并启动 "),e("a",d,[a("文档"),n(s)])]),u,e("h2",b,[e("a",m,[e("span",null,[a("运行"),e("a",h,[a("fabric-samples"),n(s)])])])]),e("p",null,[e("a",v,[a("环境准备"),n(s)])]),k,e("p",null,[a("解决方案: "),e("a",g,[a("Stack Overflow"),n(s)])]),f])}const C=l(o,[["render",_],["__file","fabric.html.vue"]]),E=JSON.parse('{"path":"/blogs/backend/fabric.html","title":"Fabric环境搭建及采坑经历","lang":"en-US","frontmatter":{"title":"Fabric环境搭建及采坑经历","tags":["后端","区块链"],"categories":["backend"],"date":"2021-06-28 14:32"},"headers":[{"level":2,"title":"系统环境","slug":"系统环境","link":"#系统环境","children":[]},{"level":2,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[{"level":3,"title":"Minikube（baas本地开发环境）","slug":"minikube-baas本地开发环境","link":"#minikube-baas本地开发环境","children":[]}]},{"level":2,"title":"运行fabric-samples","slug":"运行fabric-samples","link":"#运行fabric-samples","children":[]},{"level":2,"title":"采坑经历","slug":"采坑经历","link":"#采坑经历","children":[{"level":3,"title":"安装链码","slug":"安装链码","link":"#安装链码","children":[]},{"level":3,"title":"API Service Error","slug":"api-service-error","link":"#api-service-error","children":[]}]}],"git":{"createdTime":1717432393000,"updatedTime":1717432393000,"contributors":[{"name":"Rain","email":"smalltime153@gmail.com","commits":1}]},"filePathRelative":"blogs/backend/fabric.md"}');export{C as comp,E as data};
