<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[大二下学期总结和感想]]></title>
    <url>%2F2019%2F07%2F05%2F%E5%A4%A7%E4%BA%8C%E4%B8%8B%E5%AD%A6%E6%9C%9F%E6%80%BB%E7%BB%93%E5%92%8C%E6%84%9F%E6%83%B3%2F</url>
    <content type="text"><![CDATA[大二下学期小记和总结博客很久没有更新了。最近也是很忙，今天完成了所谓的学校“web开发大赛”，虽然只是小比赛，但是还是有很多感想！ 学习方面期末考试 期末考试呢截止今天下午已经出来了所有成绩，没有挂科！本学期的课程还是挺多的，复习压力很大。尤其是重修的离散数学，当年老师直接取消考试资格，一年后再战还是很不错的！ 理论性的东西很多对于我来讲并不擅长，我一直比较喜欢实用的应用性的东西，相比于去学习理论，我更加喜欢的是实践，从实践中学习，这样的效率更高。 网络安全 网络安全方面可以说我下的功夫并不比在前端方面，初步的入门显得并不是很难。学校组织了网络安全的大赛，基本上两天3场比赛。基础理论知识比较薄弱，初赛的成果并不理想。决赛以实践操作为主，很多题只是做了一半思路就断了，总之还是做的题见得题不多。最终比赛的结果并没有拿到名次，总之已经结束，重要的是学习的过程。有些人不努力能得到的只是暂时的，最终的结果还是要看自己努力的结果。 前端开发 相比于网络安全，我更加重视的应该是前端开发。毕竟主要学习的方向还是在这边。大二下半学期结束。学校的课程不说，自己的专业水平可以说是小有进步。框架方面，最近学习了vue，不得不感叹于框架的好处！期间也是踩了很多坑，基本语法是没有问题了。但是自己的业务逻辑方面还是需要提高，更多的其实还是代码量不够。要想学习快速进步主要还是得靠敲项目。 软件设计大赛 最近报名了山东省软件设计大赛，题目是智慧校园的APP，准备采用web app的方式，利用vue和HBuilder打包，最终形成app。 感想其实我最大的顾虑就是web app和原生安卓在体验方面会有差距。尤其对于我这个vue的菜鸟，跟队友以前并没有过多的接触。前端方面只有我一个人，其实压力很大。对于报名的题目，我个人觉得并不是很新颖。对于整个项目来讲，或者说对于队友来说，我的作用仿佛并不是很大。这一次跟后端的几个大佬一起，我内心有点拒绝。一个人做前端，没有UI，原型什么的还要我做，当然我也不做原型，随心所欲的开发吧。做一步算一步，开发并不是只有后端占大头，前端并不是所谓的只会写页面的。其实前后端分离并不是说两边完全不干涉，尤其我们自己做项目，带头的人应该有一个总体的进度的把握。明确分工，对于讲解来讲，自己应该有个数。个人能力强并不能代表团队的能力强。学校的这次的小比赛虽然只是展示项目的雏形，但是前期讲解应该以界面为主，毕竟没有功能。而且评分注重的就是界面。我花了几天时间做出的东西更希望的是能充分的展示，不是所谓的几秒钟随便点一点，说一说。最终的评分跟我想象的太不一样。 总结和感想大二下学期基本结束。假期要被项目压着。前端和网络安全两边尽量都兼顾一下，看看最后到底适合哪个吧！希望最后的结果能对得起我付出的精力和努力！]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>总结</tag>
        <tag>感想</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决VMware Workstation黑屏问题]]></title>
    <url>%2F2019%2F05%2F26%2F%E8%A7%A3%E5%86%B3VMware-Workstation%E9%BB%91%E5%B1%8F%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[解决VMware Workstation虚拟机黑屏问题前言最近升级了一下笔记本的硬件,重新安装了windows 10的2019年5月最新版本的 1903系统。作为一名在校大学生，使用虚拟机完成各种各样的实验当然是必不可少的。 正文但是重新安装了官网最新的VM15.0.1版本后发现以前版本安装的虚拟机都无法打开，开始以为是版本兼容性问题。但是在同学的笔记本上安装相同版本的VM以及打开相同的虚拟机都没有问题。Google发现遇到此问题的解决办法为修复LSP。命令行窗口—输入netsh winsock reset—重启计算机。但是尝试过后发现没有效果。忽然想到是否是因为OS的版本太高VM还没来得及适配的原因，果断改变关键字搜索。果然是这个原因。因为最新版本的Windows10内置了一个沙盒，跟VM产生了冲突。在最新的VMware Workstation15.1.0版本解决了这个问题。 解决方法:打开当前的VMware Workstation检查更新，升级到最新的15.1.0版本后即可解决或者点击下载最新15.1.0版本 另外提供一些可用的激活码12345678910111213141516171819202122232425262728293031323334353637VMware Workstation Pro 15 激活许可证UY758-0RXEQ-M81WP-8ZM7Z-Y3HDAVF750-4MX5Q-488DQ-9WZE9-ZY2D6UU54R-FVD91-488PP-7NNGC-ZFAX6YC74H-FGF92-081VZ-R5QNG-P6RY4YC34H-6WWDK-085MQ-JYPNX-NZRA2VMware Workstation Pro 14 激活许可证FF31K-AHZD1-H8ETZ-8WWEZ-WUUVACV7T2-6WY5Q-48EWP-ZXY7X-QGUWDVMware Workstation Pro 12 激活许可证5A02H-AU243-TZJ49-GTC7K-3C61NVF5XA-FNDDJ-085GZ-4NXZ9-N20E6UC5MR-8NE16-H81WY-R7QGV-QG2D8ZG1WH-ATY96-H80QP-X7PEX-Y30V4AA3E0-0VDE1-0893Z-KGZ59-QGAVFVMware Workstation Pro 10 激活许可证1Z0G9-67285-FZG78-ZL3Q2-234JG4C4EK-89KDL-5ZFP9-1LA5P-2A0J0HY086-4T01N-CZ3U0-CV0QM-13DNU 升级中遇到的问题因为之前打开黑屏的虚拟机导致了VM的残留进程vmware-vmx.exe无法关闭,重启也不行emmm。。。只能卸载旧版本后重新下载新版本完整包。 文章中引用的资源均来自互联网，如有侵权行为,请联系本人删除]]></content>
      <categories>
        <category>报错解决</category>
      </categories>
      <tags>
        <tag>1903</tag>
        <tag>搞机</tag>
        <tag>报错</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[每天学习一点vue(1)]]></title>
    <url>%2F2019%2F05%2F24%2F%E6%AF%8F%E5%A4%A9%E5%AD%A6%E4%B9%A0%E4%B8%80%E7%82%B9vue(1)%2F</url>
    <content type="text"><![CDATA[每天学习一点vue(1)最近也是很忙,白天课很多,课余时间忙的有点莫名其妙,也没做什么成果出来,利用课余时间学习vue,记录一下学习的历程和笔记。相关学习代码已经同步在Github上。 Git的使用我觉得是很重要的,尤其对于学习方面,以及未来可能面临的多人团队开发,Git都是很好的解决方案。 part1： 实例化 vue 对象 vue 的数据和方法 vue 的属性绑定 事件修饰符 v-model vue中class vue中style v-for Notes： el: element 需要获取的元素，一定是 html 中的根容器元素 data: 用于存储数据 methods: 用于定义当前实例各种方法 data-binding: 给属性绑定对应的值 v-cloak: 只替换插值表达式部分，不清空整个元素 解决插值表达式闪烁问题 用法:在style中添加[v-cloak]的display为none v-text无闪烁问题 覆盖当前标签内容 用法: 1&lt;h4 v-text=&quot;msg&quot;&gt;&lt;/h4&gt; v-html 可正常输出HTML标签 覆盖原有html内容 v-bind 绑定属性的指令 用法: 1&lt;input type=&quot;button&quot; value=&quot;按钮&quot; v-bind:title=&quot;msg&quot;&gt; 可简写为英文” : “，后面可以写合法JS表达式 v-on 事件绑定机制 可简写为 “ @ “ 事件修饰符 .stop 阻止冒泡 .prevent 阻止默认事件 .capture 捕获模式(从外向内) .self 只有点击当前元素,才触发事件处理函数 .once 只触发一次事件处理函数 注意 .self只会阻止自身的冒泡,不会阻止其余冒泡行为 v-model 双向数据绑定 v-bind:单向数据绑定 用法:例如1234567 + 只能用于表单元素中(input相关)- vue中class使用 1. 直接传递一个数组,class用v-bind做数据绑定 2. 在数组中使用三元表达式 3. 数组中使用对象代替三元表达式,提高代码可读性 4. 对象属性为类名,由于对象属性引号可省略,属性的值为标识符 &lt;h1 :class=&quot;classObj&quot;&gt;这是h1标签&lt;/h1&gt; classObj: {red:true, thin:true, italic:false, active:true} 123456- vue中内联样式style的使用 - 行内v-bind直接写样式对象 - 样式对象定义到data中引用 - 通过数组引用多个样式对象- v-for循环普通数组 &lt;p v-for=&quot;(item, i) in list&quot;&gt; 索引值:{{ i }} 每一项值:{{ item }} &lt;/p&gt; data:{ list:[1, 2, 3, 4, 5] } 12- v-for循环对象数组 &lt;p v-for=&quot;(user,i) in list&quot;&gt; ID:{{ user.id }} 名字:{{ user.name }} 索引:{{ i }} &lt;/p&gt; data:{ list:[ {id: 1, name: &apos;zs1&apos;}, {id: 2, name: &apos;zs2&apos;}, {id: 3, name: &apos;zs3&apos;}, {id: 4, name: &apos;zs4&apos;} ] } 12- v-for循环对象 &lt;p v-for=&quot;(val, key, index) in user&quot;&gt; 值为:{{ val }} 键:{{ key }} 索引:{{ index }} &lt;/p&gt; data:{ user:{ id: 1, name: &apos;tony&apos;, gender: &apos;男&apos; } }, 12- v-for迭代数字 &lt;p v-for=&quot;count in 10&quot;&gt; 这是第 {{count}} 次循环 &lt;/p&gt; ``` + 注意:v-for迭代数字,从1开始 v-for中key的使用及注意 vue2.2.0+版本使用v-for,必须使用key 在使用v-for时,如果出现问题，应当指定唯一的字符串/数字 v-for循环时key属性只能使用number或者string key使用时必须使用v-bind绑定指定key值 v-if和v-show的使用 v-if 每次都会重新删除或创建元素 切换性能消耗严重 v-show 每次不会重新进行DOM操作,只切换display:none 初始渲染消耗高 频换切换使用v-show 元素可能不会永远显示用v-if]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[钟爱捡垃圾之斐讯k2p路由器(下)——刷机]]></title>
    <url>%2F2019%2F02%2F19%2F%E9%92%9F%E7%88%B1%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E6%96%90%E8%AE%AFk2p%E8%B7%AF%E7%94%B1%E5%99%A8-%E4%B8%8B-%E2%80%94%E2%80%94%E5%88%B7%E6%9C%BA%2F</url>
    <content type="text"><![CDATA[斐讯K2、K2P A1/A2刷Breed和路由器固件教程 此教程使用工具为《K2K2P傻瓜式刷Breed脚本bat》 1.breed刷入部分 首先，将路由器简单配置一下，设置好管理员密码，推荐使用admin，方便后面操作。（其他选项如WiFi密码等无需设置） 下载网盘文件《K2K2P傻瓜式刷Breed脚本bat》并解压。双击打开文件夹，双击运行“刷机.bat”文件。（是双击运行不是右击管理员。） 对比路由器当前固件版本，查看是否为脚本中适配的版本，如果不是请到网盘文件中下载适配固件，手动升级到对应版本再进行进一步操作，否则容易失败变砖。 如下图，输入路由器IP地址，一般情况下脚本应该会自动识别，直接回车即可，如果不对请手动输入 然后，输入路由器登录密码，若为admin直接回车即可，不是的话请手动输入。 等待脚本提示成功后，Breed即成功输入。2.刷入第三方固件 首先进入breed控制台，进入方法:(1)先用网线将路由器LAN端口连到电脑上，将其他端口网线断开，然后按下路由器后面的reset键，然后再插上电源通电，等待约十秒后松开reset键，这样就进入了Breed控制台，然后在电脑上的浏览器中输入进入路由器的IP地址：192.168.1.1 进入控制台WEB页面。 开始刷机:(1)点击“固件更新”，在“固件”栏上传固件，勾选“自动重启”，点击“上传”。(2) Breed会自动计算固件相关信息，点击“刷机”，即出现下图进度条(3) 刷机完成后，等待一分钟，进入固件相关后台即可。 主流固件后台地址及密码固件名称 | 登录地址 | 管理账号密码 |——————|——————-|———————–|hiboyhiboy老毛子 | 192.168.123.1 | admin/admin |荒野无灯老毛子 | 192.168.6.1 | admin/admin |Pandora/潘多拉 | 192.168.1.1 | root/admin(或password)|高恪固件 | 192.168.1.1(或0.1)| admin/admin |斐讯官改 | 192.168.2.1 | admin/admin | 最后的最后，网盘地址:点击跳转如果有问题可以添加扣扣群：778472189，群里都是各路大佬，欢迎加入！免费帮你解决问题。 本篇教程本人非完全原创，有些搬运自群里的大佬，如有侵权行为，请联系本人删除！]]></content>
      <categories>
        <category>路由器刷机</category>
      </categories>
      <tags>
        <tag>搞机</tag>
        <tag>捡垃圾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[钟爱捡垃圾之斐讯k2p路由器(上)——开箱]]></title>
    <url>%2F2019%2F02%2F19%2F%E9%92%9F%E7%88%B1%E6%8D%A1%E5%9E%83%E5%9C%BE%E4%B9%8B%E6%96%90%E8%AE%AFk2p%E8%B7%AF%E7%94%B1%E5%99%A8(%E4%B8%8A)%E2%80%94%E2%80%94%E5%BC%80%E7%AE%B1%2F</url>
    <content type="text"><![CDATA[斐讯k2p路由器开箱前几天呢，在很多论坛上看到各路大神都在购买这个已经翻车的斐讯公司的”理财产品”——斐讯k2p路由器。为什么说是理财产品呢？这玩意当时斐讯跑路的时候坑了一大批买家，然后呢大家都看中了这个路由器的性能，因为他是一款全千兆的路由器，CPU是MT7621AT，双核880MHz，它集成了5个网络端口 10/100/1000 Mbps 工业级以太网交换机及一个rGMII接口，支持USB 3.0、 USB 2.0、SD-XC、NAND 和eMMC等多种存储接口规格，支持硬件NAT和QOS。CPU集成了交换机功能，但是当时购买的人并不是很多。过了一段时间后，莫名其妙就开始火起来了，价格也是一路上涨，从春节开始算，到现在基本已经涨了35块钱左右。某鱼和某宝屏蔽了斐讯的关键字，但是还是可以在拼夕夕和某转平台买得到。他的硬件版本也分很多，基本上可以说最好的是A1版本，可以刷的第三方固件也很多，但是市场上基本已经买不到了，能买到也是价值不菲，所以建议没入手的朋友可以购买A2版本。我也是在拼夕夕平台上购买到了全新未拆封的A2版本，花了135元。这价格怎么说呢？不亏！接下来就是开箱了！盒子有点小脏，但是问题不大。（毕竟两百块内性价比无敌！）打开就长这样。还有翻车指南！好啦！起锅烧油，啊呸！插电上机。开刷breed和第三方固件。具体的刷机教程敬请期待下篇哦！]]></content>
      <categories>
        <category>路由器刷机</category>
      </categories>
      <tags>
        <tag>搞机</tag>
        <tag>捡垃圾</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HelloWorld？！——hexo入门及常用命令]]></title>
    <url>%2F2019%2F01%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;第一次使用 Hexo来搭建博客，总的来说前前后后还是踩了不少的坑，其实2018年12月底就在研究这个东西了，但是后来种种原因搁置了这个项目。这都过去一个月了，也是突然想起来还有这么个小项目，花了一天时间也算是大概完成了。记录一下基本的操作及命令！ 快速入门HEXO&nbsp;&nbsp;&nbsp;&nbsp;hexo是基于node的一个静态博客程序，可以轻松的将Markdown文件渲染成博客页面，对于大部分喜爱折腾但又喜欢简单写点东西的人还是挺友好的。至于MarkDown也不作过多的介绍。总之，了解Markdown的语法确实为写作可以提供不少的便利。 具体的MarkDown语法可以参考这几个献给写作者的 Markdown 新手指南一位学长总结的Markdown语法 创建一篇新文章1$ hexo new "文章标题" 可简写为1$ hexo n "文章标题" 更多请看这里: Writing 在本地服务器上运行HEXO1$ hexo server 可简写为1$ hexo s 更多请看这里: Server 静态生成hexo页面1$ hexo generate 可简写为1$ hexo g 更多请看这里: Generating 部署到远程站点1$ hexo deploy 可简写为1$ hexo d 更多请看这里: Deployment]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
